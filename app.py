import streamlit as st
import pandas as pd
import joblib
import os

# ุฅุนุฏุงุฏ ุตูุญุฉ Streamlit
st.set_page_config(
    page_title="ูุธุงู ุชูุถููุงุช ุงูุณูุงุญ ูู ุนุณูุฑ",
    page_icon="๐๏ธ",
    layout="wide",
    initial_sidebar_state="expanded"
)

@st.cache_resource
def load_model():
    try:
        model = joblib.load('tourist_model.joblib')
        columns = joblib.load('model_columns.joblib')
        return model, columns
    except Exception as e:
        st.error(f"ุฎุทุฃ ูู ุชุญููู ุงููููุฐุฌ: {str(e)}")
        return None, None

model, model_columns = load_model()

if model is None:
    st.stop()

# ุงููุงููุณ ุงููุงูู ูููุฌูุงุช ุงูุณูุงุญูุฉ ูู ุนุณูุฑ
DESTINATIONS = {
    'Mountain Trips': {
        "title": "ุงูุฑุญูุงุช ุงูุฌุจููุฉ",
        "places": [
            {"name": "ููุชุฒู ุงูุณูุฏุฉ", "desc": "ุฃุนูู ููุฉ ูู ุงูุณุนูุฏูุฉ (3015ู) ูุน ููุตุงุช ูุดุงูุฏุฉ ููุณุงุฑุงุช ูุดู", "type": "ุฌุจู"},
            {"name": "ุฌุจู ูุฑูุด", "desc": "ุฅุทูุงูุงุช ุจุงููุฑุงููุฉ ูุทุจูุนุฉ ุฎูุงุจุฉ", "type": "ุฌุจู"},
            {"name": "ุฌุจู ุงููุฌุงุฒ", "desc": "ุทุฑู ูุชุนุฑุฌุฉ ููุดุงูุฏ ุณุงุญุฑุฉ", "type": "ุฌุจู"},
            {"name": "ูุฑูุฉ ุงูููุชุงุญุฉ", "desc": "ูุฑูุฉ ูููุฉ ุนูู ููุฉ ุฌุจู", "type": "ูุฑูุฉ ุฌุจููุฉ"},
            {"name": "ูุฑุชูุนุงุช ุชูููุฉ", "desc": "ุชุดุชูุฑ ุจููุงุฎูุง ุงููุนุชุฏู ูุงูุถุจุงุจ ุงููุซูู", "type": "ููุทูุฉ ุฌุจููุฉ"}
        ]
    },
    'Heritage Tourism': {
        "title": "ุงูุณูุงุญุฉ ุงูุชุฑุงุซูุฉ",
        "places": [
            {"name": "ูุฑูุฉ ุฑุฌุงู ุฃููุน", "desc": "ูุฑูุฉ ุญุฌุฑูุฉ ูุณุฌูุฉ ูู ุงููููุณูู", "type": "ูููุน ุชุฑุงุซู"},
            {"name": "ูุตุฑ ุดุฏุง", "desc": "ุชุญูุฉ ูุนูุงุฑูุฉ ุชุนูุฏ ูููุฑู ุงูู19", "type": "ูุตุฑ ุชุงุฑูุฎู"},
            {"name": "ุณูู ุงูุซูุงุซุงุก", "desc": "ุฃุญุฏ ุฃูุฏู ุงูุฃุณูุงู ุงูุดุนุจูุฉ ูู ุงูููุทูุฉ", "type": "ุณูู ุชุฑุงุซู"},
            {"name": "ุจูุฏุฉ ุงูููุงุต", "desc": "ุชุดุชูุฑ ุจุงูุนูุงุฑุฉ ุงูุชูููุฏูุฉ", "type": "ุจูุฏุฉ ุชุฑุงุซูุฉ"}
        ]
    },
    'Shopping': {
        "title": "ุงูุชุณูู",
        "places": [
            {"name": "ุงูุนุซูู ููู", "desc": "ุฃูุจุฑ ุงููุฌูุนุงุช ุงูุชุฌุงุฑูุฉ ูู ุงูููุทูุฉ", "type": "ูุฑูุฒ ุชุฌุงุฑู"},
            {"name": "ุณูู ุงูุญุฑู ุงููุฏููุฉ", "desc": "ูุดุฑุงุก ุงูููุชุฌุงุช ุงูุชุฑุงุซูุฉ", "type": "ุณูู ุดุนุจู"},
            {"name": "ุณูู ุงููููู", "desc": "ููุฃุนูุงู ุงููููุฉ ูุงูุญุฑููุฉ", "type": "ุณูู ููู"}
        ]
    },
    'Nature Exploration': {
        "title": "ุงุณุชูุดุงู ุงูุทุจูุนุฉ",
        "places": [
            {"name": "ูุงุฏู ุงููุญุงูุฉ", "desc": "ูุงุฏู ุงูุนุณู ุจุดูุงูุงุชู ูุบุงุจุงุชู ุงููุซููุฉ", "type": "ูุงุฏู"},
            {"name": "ุบุงุจุฉ ุฑุบุฏุงู", "desc": "ุฃุดุฌุงุฑ ุงูุนุฑุนุฑ ุงููุซููุฉ", "type": "ุบุงุจุฉ"},
            {"name": "ุดูุงูุงุช ุฃุจู ุฎูุงู", "desc": "ุดูุงูุงุช ุทุจูุนูุฉ ุฎูุงุจุฉ", "type": "ุดูุงูุงุช"}
        ]
    },
    'Events': {
        "title": "ุงููุนุงููุงุช",
        "places": [
            {"name": "ููุฑุฌุงู ุตูู ุนุณูุฑ", "desc": "ุฃูุจุฑ ุงููุนุงููุงุช ุงูุตูููุฉ", "type": "ููุฑุฌุงู"},
            {"name": "ุณูู ุนูุงุธ", "desc": "ูุนุงููุงุช ุซูุงููุฉ ูุชุฑุงุซูุฉ", "type": "ูุนุงููุฉ ุชุฑุงุซูุฉ"},
            {"name": "ููุฑุฌุงู ุงูุฒููุฑ", "desc": "ูู ูุตู ุงูุฑุจูุน", "type": "ููุฑุฌุงู ููุณูู"}
        ]
    }
}

# ูุงุฌูุฉ ุงููุณุชุฎุฏู
st.title('๐๏ธ   ุงูุจุฑุงูุฌ ุงูุณูุงุญูู ูู ููุทูุฉ ุนุณูุฑ')
st.markdown("""
<style>
.arabic-font {
    font-family: 'Arial', sans-serif;
    direction: rtl;
    text-align: right;
}
</style>
""", unsafe_allow_html=True)

# ุญููู ุงูุฅุฏุฎุงู
with st.form("tourist_form"):
    st.subheader("ุงูุฎุตุงุฆุต ุงูุฏูููุบุฑุงููุฉ")
    col1, col2 = st.columns(2)
    
    with col1:
        age = st.slider('ุงูุนูุฑ', 18, 70, 30)
        gender = st.radio('ุงูุฌูุณ', ['ุฐูุฑ', 'ุฃูุซู'])
        nationality = st.selectbox('ุงูุฌูุณูุฉ', ['ุฎููุฌู', 'ุฃูุฑูุจู', 'ุขุณููู', 'ุดุฑู ุฃูุณุทู', 'ุฃูุฑููู'])
        
    with col2:
        family_status = st.selectbox('ููุน ุงูุฒูุงุฑุฉ', ['ูุฑุฏู', 'ุนุงุฆูู', 'ูุฌููุนุฉ'])
        season = st.selectbox('ุงูููุณู', ['ุงูุตูู', 'ุงูุดุชุงุก', 'ุงูุฑุจูุน', 'ุงูุฎุฑูู'])
    
    st.subheader("ุชูุถููุงุช ุงูุฅูุงูุฉ")
    col3, col4 = st.columns(2)
    
    with col3:
        purpose = st.selectbox('ุงูุบุฑุถ ูู ุงูุฒูุงุฑุฉ', ['ุชุฑููู', 'ุนูู', 'ุชุฑุงุซ', 'ุชุณูู', 'ุฒูุงุฑุฉ ุฃูุงุฑุจ', 'ุฃุฎุฑู'])
        
    with col4:
        accommodation = st.selectbox('ููุน ุงูุฅูุงูุฉ', ['ููุฏู', 'ุดูุฉ', 'ุณูู ุฎุงุต'])
    
    st.subheader("ุงููุนูููุงุช ุงููุงููุฉ")
    spending = st.slider('ุงูููุฒุงููุฉ (ุจุงูุฑูุงู ุงูุณุนูุฏู)', 1000, 5000, 2000, step=500)
    stay_length = st.slider('ูุฏุฉ ุงูุฅูุงูุฉ (ุฃูุงู)', 1, 14, 5)
    
    submitted = st.form_submit_button("ุชูุตูุฉ ุจุงููุฌูุงุช ุงูููุงุณุจุฉ")

if submitted:
    try:
        # ุชุญููู ุงููุฏุฎูุงุช ุฅูู ุงูุฅูุฌููุฒูุฉ ูููููุฐุฌ
        gender_map = {'ุฐูุฑ': 'Male', 'ุฃูุซู': 'Female'}
        nationality_map = {
            'ุฎููุฌู': 'GCC',
            'ุฃูุฑูุจู': 'Europe',
            'ุขุณููู': 'Asia',
            'ุดุฑู ุฃูุณุทู': 'Middle East',
            'ุฃูุฑููู': 'Africa'
        }
        family_map = {'ูุฑุฏู': 'Individual', 'ุนุงุฆูู': 'Family', 'ูุฌููุนุฉ': 'Group'}
        season_map = {'ุงูุตูู': 'Summer', 'ุงูุดุชุงุก': 'Winter', 'ุงูุฑุจูุน': 'Spring', 'ุงูุฎุฑูู': 'Fall'}
        purpose_map = {
            'ุชุฑููู': 'Leisure',
            'ุนูู': 'Business',
            'ุชุฑุงุซ': 'Heritage',
            'ุชุณูู': 'Shopping',
            'ุฒูุงุฑุฉ ุฃูุงุฑุจ': 'Visiting Friends & Relatives',
            'ุฃุฎุฑู': 'Other'
        }
        accommodation_map = {'ููุฏู': 'Hotel', 'ุดูุฉ': 'Apartment', 'ุณูู ุฎุงุต': 'Private'}
        
        # ุฅูุดุงุก ุจูุงูุงุช ุงูุฅุฏุฎุงู ูููููุฐุฌ
        input_data = {
            'Age': [age],
            'Spending_per_Trip': [spending],
            'Length_of_Stay': [stay_length]
        }
        
        # ุฅุถุงูุฉ ุฌููุน ุงูุฃุนูุฏุฉ ุงููุฆููุฉ
        for col in model_columns:
            if col not in input_data:
                # ุชุญุฏูุฏ ูููุฉ ุงูุนููุฏ
                value = 0
                
                if col.startswith('Gender_'):
                    value = 1 if col == f"Gender_{gender_map[gender]}" else 0
                elif col.startswith('Nationality_'):
                    value = 1 if col == f"Nationality_{nationality_map[nationality]}" else 0
                elif col.startswith('Family_Status_'):
                    value = 1 if col == f"Family_Status_{family_map[family_status]}" else 0
                elif col.startswith('Season_'):
                    value = 1 if col == f"Season_{season_map[season]}" else 0
                elif col.startswith('Purpose_'):
                    cleaned_purpose = purpose_map[purpose].replace(' & ', '_')
                    value = 1 if col == f"Purpose_{cleaned_purpose}" else 0
                elif col.startswith('Accommodation_'):
                    value = 1 if col == f"Accommodation_{accommodation_map[accommodation]}" else 0
                
                input_data[col] = [value]
        
        input_df = pd.DataFrame(input_data)
        input_df = input_df[model_columns]  # ุชุฑุชูุจ ุงูุฃุนูุฏุฉ ููุง ูู ุงูุชุฏุฑูุจ
        
        # ุงูุชูุจุค
        prediction = model.predict(input_df)[0]
        activity_info = DESTINATIONS[prediction]
        
        # ุนุฑุถ ุงููุชุงุฆุฌ
        st.success(f"## ุงูุชูุตูุฉ: {activity_info['title']}")
        
        # ุนุฑุถ ุงููุฌูุงุช ุงูููุชุฑุญุฉ
        st.subheader("ุงููุฌูุงุช ุงูุณูุงุญูุฉ ุงูููุชุฑุญุฉ:")
        
        for place in activity_info['places']:
            with st.expander(f"{place['name']} ({place['type']})"):
                st.markdown(f"""
                **ุงููุตู:** {place['desc']}
                
                **ุฃูู ุงูุฃูุดุทุฉ:**
                - ุงุณุชูุดุงู ุงูููุทูุฉ
                - ุงูุชุตููุฑ ุงูููุชูุบุฑุงูู
                - ุงูุงุณุชูุชุงุน ุจุงูููุงุธุฑ ุงูุทุจูุนูุฉ
                
                **ูุฏุฉ ุงูุฒูุงุฑุฉ ุงูููุชุฑุญุฉ:** 2-3 ุณุงุนุงุช
                """)
        
        # ุฎุฑูุทุฉ ุชูุถุญ ููุงูุน ุงููุฌูุงุช (ูููู ุฅุถุงูุชูุง ูุงุญูุงู)
        # st.subheader("ุฎุฑูุทุฉ ุงููุฌูุงุช ุงูููุชุฑุญุฉ")
        # st.map(...)
        
    except Exception as e:
        st.error(f"ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุทูุจู: {str(e)}")

# ูุนูููุงุช ุฅุถุงููุฉ ูู ุงูุดุฑูุท ุงูุฌุงูุจู
with st.sidebar:
    st.header("ูุนูููุงุช ุนู ููุทูุฉ ุนุณูุฑ")
    st.markdown("""
    - **ุงููููุน:** ุฌููุจ ุบุฑุจ ุงูุณุนูุฏูุฉ
    - **ุงููุณุงุญุฉ:** 81,000 ููยฒ
    - **ุงูููุงุฎ:** ูุนุชุฏู ุตููุงู ุจุงุฑุฏ ุดุชุงุกู
    - **ุฃุดูุฑ ุงููุนุงูู:** ุงูุณูุฏุฉุ ุฑุฌุงู ุฃููุนุ ุฃุจูุง
    """)
    
    st.header("ูุตุงุฆุญ ููุณุงุฆุญ")
    st.markdown("""
    1. ุงุญูู ููุงุจุณ ุฏุงูุฆุฉ ูููุณุงุก
    2. ุงุณุชุฎุฏู ุฎุฑูุทุฉ ุฌูุฌู ููุชููู
    3. ุงุญุฌุฒ ุงูููุงุฏู ูุณุจูุงู ูู ุงูููุงุณู
    4. ุฌุฑุจ ุงููุฃูููุงุช ุงููุญููุฉ
    """)

# ุชุฐููู ุงูุตูุญุฉ
st.markdown("---")
st.markdown("""
""", unsafe_allow_html=True)